name: Executable Build

on:
  push:
    tags:
      - "v*.*.*"

  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: 'x64'
          cache: 'pip'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Python Dependencies (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: |
          pip install imageio

      - name: Install UPX (Windows)
        if: ${{ runner.os == 'Windows' }}
        uses: crazy-max/ghaction-upx@v2
        with:
          install-only: true

      - name: Build (Windows)
        if: ${{ runner.os == 'Windows' }}
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py
          show-scons: false
          mingw64: true
          standalone: true
          onefile: false
          output-file: meg-windows-x86_64
          enable-plugins: upx
          include-module: apscheduler.triggers.date
          include-data-dir: config=config
          windows-icon-from-ico: data/images/logo_small.ico

      - name: Build (Linux)
        if: ${{ runner.os == 'Linux' }}
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py
          show-scons: false
          standalone: true
          onefile: false
          output-file: meg-linux-x86_64
          enable-plugins: upx
          include-module: apscheduler.triggers.date
          include-data-dir: config=config

      - name: Build (macOS)
        if: ${{ runner.os == 'macOS' }}
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py
          show-scons: false
          standalone: true
          onefile: false
          output-file: meg-macos-x86_64
          include-module: apscheduler.triggers.date
          include-data-dir: config=config
          macos-app-icon: data/images/logo_small.ico

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: meg-${{ runner.os }}-x86_64
          path: |
            build/main.dist/*

  upload-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: build

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/*
